https://groups.google.com/g/librosa/c/8NbuBqyqLL0?pli=1

Yes, the outputs are in Hz, as noted in the documentation: https://librosa.org/doc/latest/generated/librosa.yin.html#librosa.yin

A couple of things to note here:

If you're tracking speech, an f0 max of 2093 is way overkill.  
Try dropping that down to 400 or so if you're confident that the data only contains human speech.
Averaging Hz values is probably not what you want here.  
Remember that frequency grows multiplicatively, not additively.  
You'd do better to use a geometric mean (or equivalently, mean of log-Hz) here.
yin does not do voicing estimation, 
so it will try to produce an f0 estimate at each frame regardless of whether there is actually any pitched content.  
This can severely skew your aggregated statistics.  I suggest to use pyin instead, and only aggregate the voiced frames.  
np.nanmean will do this automatically for you when using the default setting of fill_na=np.nan.  
(You probably still should work in log frequency for this.)

-----------------------------------

https://medium.com/@neurodatalab/pitch-tracking-or-how-to-estimate-the-fundamental-frequency-in-speech-on-the-examples-of-praat-fe0ca50f61fd

before applying time-domain methods, the signal is filtered in order to leave only low frequencies. 
The thresholds are set: minimum and maximum frequencies, for example, from 75 to 500 Hz. 
F0 estimation is only conducted for harmoniс speech.

--------------------------------------------
Sulla diminuzione della F0 media con l'età:
Age-Related Changes in Acoustic Characteristics of Adult Speech
